{"version":3,"sources":["game/assets/sprites/atlas/hero.png","game/assets/sprites/atlas/slime.png","game/assets/sprites/atlas/heart.png","game/assets/sprites/atlas/coin.png","game/assets/sprites/maps/tilesets/tileset.png","game/assets/images/main_menu_background.png","game/assets/images/game_over_background.png","game/assets/images/game_logo.png","game/assets/images/heart_container.png","game/assets/images/sword.png","game/assets/images/push.png","game/assets/sprites/atlas/npc_01.png","game/assets/sprites/atlas/npc_02.png","game/assets/sprites/atlas/npc_03.png","game/assets/sprites/atlas/npc_04.png","game/assets/sprites/atlas/dragon.png","game/scenes/BootScene.js","game/scenes/MainMenuScene.js","game/scenes/GameOverScene.js","game/utils.js","game/constants.js","game/scenes/GameScene.js","game/assets/images/dialog_borderbox.png","game/GameMenu.js","game/Message.js","game/DialogBox.js","game/assets/images/coin.png","game/HeroCoin.js","game/assets/images/health.png","game/HeroHealth.js","App.js","reportWebVitals.js","index.js"],"names":["BootScene","fontSize","progressBar","this","add","graphics","progressBox","cameras","main","gameWidth","width","gameHeight","height","barPositionX","Math","ceil","fillStyle","fillRect","loadingText","text","fontFamily","size","fill","color","setOrigin","setResolution","percentText","assetText","load","on","value","clear","setText","Number","parseInt","file","key","destroy","tilemapTiledJSON","homePageCity","homePageHouse01Map","homePageHouse02Map","homePageHouse03Map","atlas","heroImage","heroJson","slimeImage","slimeJson","heartImage","heartJson","coinImage","coinJson","npc01Image","npc01Json","npc02Image","npc02Json","npc03Image","npc03Json","npc04Image","npc04Json","dragonImage","dragonJson","image","tilesetImage","mainMenuBackgroundImage","gameOverBackgroundImage","gameLogoImage","heartContainerImage","swordImage","pushImage","scene","start","Scene","MainMenuScene","setDepth","scale","max","setScale","customEvent","CustomEvent","detail","menuItems","menuPosition","window","dispatchEvent","addEventListener","gameMenuSelectedEventListener","selectedItem","heroStatus","position","x","y","previousPosition","frame","facingDirection","health","maxHealth","coin","canPush","haveSword","mapKey","location","reload","removeEventListener","createInteractiveGameObject","name","isDebug","origin","customCollider","GameObjects","Rectangle","isCustomCollider","setFillStyle","physics","existing","body","setAllowGravity","setImmovable","SCENE_FADE_TIME","NPC_MOVEMENT_RANDOM","GameScene","enterKey","spaceKey","cursors","wasd","isShowingDialog","isTeleporting","isAttacking","data","initData","currentPosition","gridEngine","getPosition","getFacingDirection","assetKey","animation","anims","generateFrameNames","filter","includes","parts","split","Boolean","isNaN","sort","a","b","animationName","create","frames","replace","frameRate","repeat","yoyo","direction","spriteKey","trim","npcKey","movementType","delay","area","Array","from","length","heroSprite","map","v","index","calculateHeroHealthState","healthStates","heroCoins","enemyType","isDebugMode","config","debug","PhaserMath","Between","itemType","item","sprite","itemsSprites","play","camera","game","sys","initialPosition","initialFrame","heroHealth","heroMaxHealth","heroCoin","heroCanPush","heroHaveSword","fadeIn","input","keyboard","addKey","Input","Keyboard","KeyCodes","ENTER","SPACE","createCursorKeys","addKeys","up","W","down","S","left","A","right","D","make","tilemap","addTilesetImage","phaserGame","updateHeroHealthUi","calculateHeroHealthStates","updateHeroCoinUi","restoreHealth","restore","min","increaseMaxHealth","increase","collectCoin","coinQuantity","takeDamage","damage","time","delayedCall","fadeOut","tweens","targets","alpha","ease","Easing","Elastic","InOut","duration","setSize","setOffset","heroActionCollider","heroPresenceCollider","heroObjectCollider","group","exists","getFramesForAnimation","enemiesData","elementsLayers","i","layer","createLayer","properties","forEach","property","collider","layers","npcsKeys","getObjectLayer","objects","type","overlap","objA","objB","JustDown","characterName","dialogBoxFinishedEventListener","extractNpcDataFromTiled","push","enemyAI","speed","enemySpecies","getEnemySpecies","enemyName","extractTeleportDataFromTiled","teleportToMapKey","teleportToX","teleportToY","overlapCollider","world","removeCollider","restart","calculatePreviousTeleportPosition","some","n","isWalkable","tileX","tileY","every","t","tilemapLayer","getTileAt","ge_collide","centerX","floor","centerY","Clamp","getRandomWalkableTile","startFollow","setFollowOffset","setBounds","widthInPixels","gameSize","heightInPixels","setPosition","gridEngineConfig","characters","id","startPosition","offsetY","find","obj","setVisible","enemiesSprites","enemyData","enemy","setTint","getEnemyColor","updateFollowHeroPosition","lastKnowHeroPosition","isSpaceJustDown","spawnItem","npcSprites","npcData","npc","createPlayerWalkingAnimation","createPlayerAttackAnimation","animationFrame","moveRandomly","isMoving","getEnemyAttackSpeed","canSeeHero","isFollowingHero","heroPosition","heroBackPosition","getBackPosition","enemyPosition","setSpeed","moveTo","NoPathFoundStrategy","embedded","movementStarted","subscribe","charId","getChildren","npcSprite","texture","enemySprite","movementStopped","stop","setFrame","getStopFrame","directionChanged","update","setX","setY","stopMovement","getOppositeDirection","tile","wasHandled","pixelX","pixelY","newPosition","calculatePushTilePosition","getTileAtWorldXY","isMoved","onComplete","newTile","putTileAt","isDown","move","useStyles","makeStyles","theme","menuWrapper","multiplier","textTransform","transform","menuPositionWrapper","innerWidth","menuWidth","minWidth","top","menuItemsWrapper","textAlign","padding","menuItem","cursor","listStyle","marginBottom","backgroundColor","border","selectedMenuItem","GameMenu","items","onSelected","classes","useState","selectedItemIndex","setSelectedItemIndex","useEffect","handleKeyPressed","e","code","className","classNames","onMouseEnter","onClick","dialogMessage","Message","message","trail","onMessageEnded","forceShowFullMessage","useMemo","letter","transitions","useTransition","display","enter","onRest","status","controller","styles","span","style","dialogWindow","messageBoxHeight","imageRendering","borderImage","dialogBorderBox","minHeight","dialogTitle","fontWeight","dialogFooter","bottom","DialogBox","messages","onDone","currentMessage","setCurrentMessage","messageEnded","setMessageEnded","setForceShowFullMessage","handleClick","useCallback","action","coinContainer","userSelect","backgroundSize","background","coinFull","strokeSize","textShadow","HeroCoin","toString","padStart","healthContainer","healthStateFull","healthImage","healthStateHalf","healthStateEmpty","HeroHealth","healthState","innerHeight","calculateGameSize","modal","alignItems","justifyContent","paper","palette","boxShadow","shadows","spacing","overflow","postContainer","maxWidth","maxHeight","gameContentWrapper","margin","pageWrapper","marginTop","marginLeft","preLoadDialogImage","backgroundImage","backgroundRepeat","gameWrapper","gameGif","dialogs","App","setMessages","setCharacterName","gameMenuItems","setGameMenuItems","gameMenuPosition","setGameMenuPosition","heroHealthStates","setHeroHealthStates","setHeroCoins","handleMessageIsDone","handleMenuItemSelected","Phaser","Game","AUTO","title","parent","orientation","Scale","LANDSCAPE","localStorageName","autoRound","pixelArt","autoCenter","CENTER_BOTH","mode","ENVELOP","GameOverScene","default","plugins","plugin","GridEngine","mapping","dialogBoxEventListener","gameMenuEventListener","heroHealthEventListener","heroCoinEventListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.774f0282.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hero.680baedf.png\";","export default __webpack_public_path__ + \"static/media/slime.3a5fd77a.png\";","export default __webpack_public_path__ + \"static/media/heart.277f826b.png\";","export default __webpack_public_path__ + \"static/media/coin.d7185127.png\";","export default __webpack_public_path__ + \"static/media/tileset.bce8ab10.png\";","export default __webpack_public_path__ + \"static/media/main_menu_background.f7d244f3.png\";","export default __webpack_public_path__ + \"static/media/game_over_background.21509171.png\";","export default __webpack_public_path__ + \"static/media/game_logo.68dc69a1.png\";","export default __webpack_public_path__ + \"static/media/heart_container.db75eb15.png\";","export default __webpack_public_path__ + \"static/media/sword.4d0808f2.png\";","export default __webpack_public_path__ + \"static/media/push.0c204cb5.png\";","export default __webpack_public_path__ + \"static/media/npc_01.85943aad.png\";","export default __webpack_public_path__ + \"static/media/npc_02.128762a8.png\";","export default __webpack_public_path__ + \"static/media/npc_03.88a643c6.png\";","export default __webpack_public_path__ + \"static/media/npc_04.ddb002b4.png\";","export default __webpack_public_path__ + \"static/media/dragon.8740548c.png\";","import { Scene } from 'phaser';\n\n// Houses files\nimport homePageHouse01Map from '../assets/sprites/maps/houses/home_page_city_house_01.json';\nimport homePageHouse02Map from '../assets/sprites/maps/houses/home_page_city_house_02.json';\nimport homePageHouse03Map from '../assets/sprites/maps/houses/home_page_city_house_03.json';\n\n// Cities files\nimport homePageCity from '../assets/sprites/maps/cities/home_page_city.json';\n\n// Characters files\nimport heroJson from '../assets/sprites/atlas/hero.json';\nimport slimeJson from '../assets/sprites/atlas/slime.json';\nimport heartJson from '../assets/sprites/atlas/heart.json';\nimport coinJson from '../assets/sprites/atlas/coin.json';\n\n// NPC jsons\nimport npc01Json from '../assets/sprites/atlas/npc_01.json';\nimport npc02Json from '../assets/sprites/atlas/npc_02.json';\nimport npc03Json from '../assets/sprites/atlas/npc_03.json';\nimport npc04Json from '../assets/sprites/atlas/npc_04.json';\nimport dragonJson from '../assets/sprites/atlas/dragon.json';\n\n// Images\nimport heroImage from '../assets/sprites/atlas/hero.png';\nimport slimeImage from '../assets/sprites/atlas/slime.png';\nimport heartImage from '../assets/sprites/atlas/heart.png';\nimport coinImage from '../assets/sprites/atlas/coin.png';\nimport tilesetImage from '../assets/sprites/maps/tilesets/tileset.png';\nimport mainMenuBackgroundImage from '../assets/images/main_menu_background.png';\nimport gameOverBackgroundImage from '../assets/images/game_over_background.png';\nimport gameLogoImage from '../assets/images/game_logo.png';\nimport heartContainerImage from '../assets/images/heart_container.png';\nimport swordImage from '../assets/images/sword.png';\nimport pushImage from '../assets/images/push.png';\n\n// NPC images\nimport npc01Image from '../assets/sprites/atlas/npc_01.png';\nimport npc02Image from '../assets/sprites/atlas/npc_02.png';\nimport npc03Image from '../assets/sprites/atlas/npc_03.png';\nimport npc04Image from '../assets/sprites/atlas/npc_04.png';\nimport dragonImage from '../assets/sprites/atlas/dragon.png';\n\nexport default class BootScene extends Scene {\n    constructor() {\n        super('BootScene');\n    }\n\n    preload() {\n        const fontSize = 16;\n\n        // setup loading bar\n        const progressBar = this.add.graphics();\n        const progressBox = this.add.graphics();\n        const { width: gameWidth, height: gameHeight } = this.cameras.main;\n\n        const barPositionX = Math.ceil((gameWidth - (gameWidth * 0.7)) / 2);\n        progressBox.fillStyle(0x222222, 0.8);\n        progressBox.fillRect(\n            barPositionX,\n            Math.ceil(gameHeight / 6),\n            Math.ceil(gameWidth * 0.7),\n            Math.ceil(gameHeight / 10)\n        );\n\n        const loadingText = this.add.text(\n            gameWidth / 2,\n            Math.ceil(gameHeight / 10),\n            'loading...',\n            {\n                fontFamily: '\"Press Start 2P\"',\n                fontSize: `${fontSize}px`,\n                size: `${fontSize}px`,\n                fill: '#ffffff',\n                color: '#ffffff',\n            }\n        );\n\n        loadingText.setOrigin(0.5);\n        loadingText.setResolution(30);\n\n        const percentText = this.add.text(\n            gameWidth / 2,\n            Math.ceil((gameHeight / 6) + (fontSize / 2) + (gameHeight / 60)),\n            '0%',\n            {\n                fontFamily: '\"Press Start 2P\"',\n                fontSize: `${fontSize}px`,\n                size: `${fontSize}px`,\n                fill: '#ffffff',\n                color: '#ffffff',\n            }\n        );\n\n        percentText.setOrigin(0.5);\n        percentText.setResolution(30);\n\n        const assetText = this.add.text(\n            gameWidth / 2,\n            Math.ceil(gameHeight / 3),\n            '',\n            {\n                fontFamily: '\"Press Start 2P\"',\n                fontSize: `${fontSize / 2}px`,\n                size: `${fontSize / 2}px`,\n                fill: '#ffffff',\n                color: '#ffffff',\n            }\n        );\n\n        assetText.setOrigin(0.5);\n        assetText.setResolution(30);\n\n        this.load.on('progress', (value) => {\n            progressBar.clear();\n            progressBar.fillStyle(0xFFFFFF, 1);\n            progressBar.fillRect(\n                barPositionX,\n                Math.ceil(gameHeight / 6),\n                Math.ceil(gameWidth * 0.7) * value,\n                Math.ceil(gameHeight / 10)\n            );\n            percentText.setText(`${Number.parseInt(value * 100, 10)}%`);\n        });\n\n        this.load.on('fileprogress', (file) => {\n            assetText.setText(`loading: ${file.key}`);\n        });\n\n        this.load.on('complete', () => {\n            progressBar.destroy();\n            progressBox.destroy();\n            percentText.destroy();\n            assetText.destroy();\n        });\n\n        // Maps\n        this.load.tilemapTiledJSON('home_page_city', homePageCity);\n        this.load.tilemapTiledJSON('home_page_city_house_01', homePageHouse01Map);\n        this.load.tilemapTiledJSON('home_page_city_house_02', homePageHouse02Map);\n        this.load.tilemapTiledJSON('home_page_city_house_03', homePageHouse03Map);\n\n        // Atlas\n        this.load.atlas('hero', heroImage, heroJson);\n        this.load.atlas('slime', slimeImage, slimeJson);\n        this.load.atlas('heart', heartImage, heartJson);\n        this.load.atlas('coin', coinImage, coinJson);\n\n        // NPCs\n        this.load.atlas('npc_01', npc01Image, npc01Json);\n        this.load.atlas('npc_02', npc02Image, npc02Json);\n        this.load.atlas('npc_03', npc03Image, npc03Json);\n        this.load.atlas('npc_04', npc04Image, npc04Json);\n        this.load.atlas('dragon', dragonImage, dragonJson)\n\n        // Tilesets\n        this.load.image('tileset', tilesetImage);\n\n        // Images\n        this.load.image('main_menu_background', mainMenuBackgroundImage);\n        this.load.image('game_over_background', gameOverBackgroundImage);\n        this.load.image('game_logo', gameLogoImage);\n        this.load.image('heart_container', heartContainerImage);\n        this.load.image('sword', swordImage);\n        this.load.image('push', pushImage);\n    }\n\n    create() {\n        this.scene.start('MainMenuScene');\n    }\n}\n","import { Scene } from 'phaser';\n\nexport default class MainMenuScene extends Scene {\n    constructor() {\n        super('MainMenuScene');\n    }\n\n    preload() {\n        // TODO\n    }\n\n    create() {\n        const { width: gameWidth, height: gameHeight } = this.cameras.main;\n\n        this.add.image(gameWidth / 2, Math.ceil(gameHeight / 10), 'game_logo')\n            .setOrigin(0.5, 0)\n            .setDepth(1);\n\n        const scale = Math.max(Math.ceil(gameWidth / 480), Math.ceil(gameHeight / 216));\n        this.add.image(0, 0, 'main_menu_background')\n            .setScale(scale)\n            .setDepth(0)\n            .setOrigin(0, 0);\n\n        const customEvent = new CustomEvent('menu-items', {\n            detail: {\n                menuItems: ['start', 'exit'],\n                menuPosition: 'center',\n            },\n        });\n\n        window.dispatchEvent(customEvent);\n        const gameMenuSelectedEventListener = ({ detail }) => {\n            switch (detail.selectedItem) {\n                case 'start': {\n                    this.scene.start('GameScene', {\n                        heroStatus: {\n                            position: { x: 4, y: 3 },\n                            previousPosition: { x: 4, y: 3 },\n                            frame: 'hero_idle_down_01',\n                            facingDirection: 'down',\n                            health: 60,\n                            maxHealth: 60,\n                            coin: 0,\n                            canPush: false,\n                            haveSword: false,\n                        },\n                        mapKey: 'home_page_city_house_01',\n                    });\n                    break;\n                }\n\n                case 'exit': {\n                    window.location.reload();\n                    break;\n                }\n\n                case 'settings': {\n                    break;\n                }\n\n                default: {\n                    break;\n                }\n            }\n\n            window.removeEventListener(\n                'menu-item-selected',\n                gameMenuSelectedEventListener\n            );\n        };\n\n        window.addEventListener(\n            'menu-item-selected',\n            gameMenuSelectedEventListener\n        );\n    }\n}\n","import { Scene } from 'phaser';\n\nexport default class MainMenuScene extends Scene {\n    constructor() {\n        super('GameOverScene');\n    }\n\n    preload() {\n        // TODO\n    }\n\n    create() {\n        // const fontSize = 24;\n        const { width: gameWidth, height: gameHeight } = this.cameras.main;\n\n        // const gameOverText = this.add.text(\n        //     gameWidth / 2,\n        //     Math.ceil(gameHeight / 5),\n        //     'game over',\n        //     {\n        //         fontFamily: '\"Press Start 2P\"',\n        //         fontSize: `${fontSize}px`,\n        //         size: `${fontSize}px`,\n        //         fill: '#ffffff',\n        //         color: '#ffffff',\n        //     }\n        // ).setDepth(10).setOrigin(0.5, 0.5);\n\n        const scale = Math.max(Math.ceil(gameWidth / 220), Math.ceil(gameHeight / 124));\n        this.add.image(0, 0, 'game_over_background')\n            .setScale(scale)\n            .setDepth(0)\n            .setOrigin(0, 0);\n\n        const customEvent = new CustomEvent('menu-items', {\n            detail: {\n                menuItems: ['game.game_over.retry', 'game.game_over.exit'],\n                menuPosition: 'center',\n            },\n        });\n\n        window.dispatchEvent(customEvent);\n        const gameMenuSelectedEventListener = ({ detail }) => {\n            switch (detail.selectedItem) {\n                case 'game.game_over.retry': {\n                    this.scene.start('MainMenuScene');\n                    break;\n                }\n\n                case 'game.game_over.exit': {\n                    window.location.reload();\n                    break;\n                }\n\n                default: {\n                    break;\n                }\n            }\n\n            window.removeEventListener(\n                'menu-item-selected',\n                gameMenuSelectedEventListener\n            );\n        };\n\n        window.addEventListener(\n            'menu-item-selected',\n            gameMenuSelectedEventListener\n        );\n    }\n}\n","import { GameObjects } from 'phaser';\n\nexport const createInteractiveGameObject = (\n    scene,\n    x,\n    y,\n    width,\n    height,\n    name,\n    isDebug = false,\n    origin = { x: 0, y: 1 }\n) => {\n    const customCollider = new GameObjects.Rectangle(\n        scene,\n        x,\n        y,\n        width,\n        height\n    ).setOrigin(origin.x, origin.y);\n    customCollider.name = name;\n    customCollider.isCustomCollider = true;\n\n    if (isDebug) {\n        customCollider.setFillStyle(0x741B47);\n    }\n\n    scene.physics.add.existing(customCollider);\n    customCollider.body.setAllowGravity(false);\n    customCollider.body.setImmovable(true);\n\n    return customCollider;\n};\n\nexport const calculateGameSize = () => {\n    let width = 400;\n    let height = 224; // 16 * 14 = 224\n    const multiplier = Math.min(Math.floor(window.innerWidth / 400), Math.floor(window.innerHeight / 224)) || 1;\n\n    if (multiplier > 1) {\n        width += Math.floor((window.innerWidth - width * multiplier) / (16 * multiplier)) * 16;\n        height += Math.floor((window.innerHeight - height * multiplier) / (16 * multiplier)) * 16;\n    }\n\n    return { width, height, multiplier };\n};\n","export const SCENE_FADE_TIME = 300;\nexport const ATTACK_DELAY_TIME = 50;\n\n// Tileset stuff\nexport const BUSH_INDEX = 428;\nexport const BOX_INDEX = 427;\nexport const COIN_INDEX = 192;\nexport const HEART_CONTAINER_INDEX = 233;\n\nexport const NPC_MOVEMENT_RANDOM = 'random';\nexport const NPC_MOVEMENT_STILL = 'still';\n\n// Enemies\nexport const ENEMY_AI_TYPE = 'follow';\n\n// Save data\nexport const SAVE_DATA_KEY = 'pablogg_game_data';\n","import { Input, Math as PhaserMath, Scene } from 'phaser';\nimport { createInteractiveGameObject } from '../utils';\nimport {\n    ATTACK_DELAY_TIME,\n    BOX_INDEX,\n    BUSH_INDEX,\n    ENEMY_AI_TYPE,\n    NPC_MOVEMENT_RANDOM,\n    SCENE_FADE_TIME,\n} from '../constants';\n\nexport default class GameScene extends Scene {\n    constructor() {\n        super('GameScene');\n    }\n\n    enterKey = {};\n    spaceKey = {};\n    cursors = {};\n    wasd = {};\n    isShowingDialog = false;\n    isTeleporting = false;\n    isAttacking = false;\n\n    init(data) {\n        this.initData = data;\n    }\n\n    calculatePreviousTeleportPosition() {\n        const currentPosition = this.gridEngine.getPosition('hero');\n        const facingDirection = this.gridEngine.getFacingDirection('hero');\n\n        switch (facingDirection) {\n            case 'up': {\n                return {\n                    x: currentPosition.x,\n                    y: currentPosition.y + 1,\n                };\n            }\n\n            case 'right': {\n                return {\n                    x: currentPosition.x - 1,\n                    y: currentPosition.y,\n                };\n            }\n\n            case 'down': {\n                return {\n                    x: currentPosition.x,\n                    y: currentPosition.y - 1,\n                };\n            }\n\n            case 'left': {\n                return {\n                    x: currentPosition.x + 1,\n                    y: currentPosition.y,\n                };\n            }\n\n            default: {\n                return {\n                    x: currentPosition.x,\n                    y: currentPosition.y,\n                };\n            }\n        }\n    }\n\n    getFramesForAnimation(assetKey, animation) {\n        return this.anims.generateFrameNames(assetKey)\n            .filter((frame) => {\n                if (frame.frame.includes(`${assetKey}_${animation}`)) {\n                    const parts = frame.frame.split(`${assetKey}_${animation}_`);\n                    return Boolean(!Number.isNaN(Number.parseInt(parts[1], 10)));\n                }\n\n                return false;\n            })\n            .sort((a, b) => (a.frame < b.frame ? -1 : 1));\n    }\n\n    createPlayerWalkingAnimation(assetKey, animationName) {\n        this.anims.create({\n            key: `${assetKey}_${animationName}`,\n            frames: [\n                { key: assetKey, frame: `${assetKey}_${animationName}_01` },\n                { key: assetKey, frame: `${assetKey}_${animationName.replace('walking', 'idle')}_01` },\n                { key: assetKey, frame: `${assetKey}_${animationName}_02` },\n            ],\n            frameRate: 4,\n            repeat: -1,\n            yoyo: true,\n        });\n    }\n\n    createPlayerAttackAnimation(assetKey, animationName) {\n        this.anims.create({\n            key: `${assetKey}_${animationName}`,\n            frames: [\n                { key: assetKey, frame: `${assetKey}_${animationName}_01` },\n                { key: assetKey, frame: `${assetKey}_${animationName}_02` },\n                { key: assetKey, frame: `${assetKey}_${animationName}_03` },\n                { key: assetKey, frame: `${assetKey}_${animationName}_04` },\n                { key: assetKey, frame: `${assetKey}_${animationName.replace('attack', 'idle')}_01` },\n            ],\n            frameRate: 16,\n            repeat: 0,\n            yoyo: false,\n        });\n    }\n\n    getStopFrame(direction, spriteKey) {\n        switch (direction) {\n            case 'up':\n                return `${spriteKey}_idle_up_01`;\n            case 'right':\n                return `${spriteKey}_idle_right_01`;\n            case 'down':\n                return `${spriteKey}_idle_down_01`;\n            case 'left':\n                return `${spriteKey}_idle_left_01`;\n            default:\n                return null;\n        }\n    }\n\n    getOppositeDirection(direction) {\n        switch (direction) {\n            case 'up':\n                return 'down';\n            case 'right':\n                return 'left';\n            case 'down':\n                return 'up';\n            case 'left':\n                return 'right';\n            default:\n                return null;\n        }\n    }\n\n    getBackPosition(facingDirection, position) {\n        switch (facingDirection) {\n            case 'up':\n                return {\n                    ...position,\n                    y: position.y + 1,\n                };\n            case 'right':\n                return {\n                    ...position,\n                    x: position.x - 1,\n                };\n            case 'down':\n                return {\n                    ...position,\n                    y: position.y - 1,\n                };\n            case 'left':\n                return {\n                    ...position,\n                    x: position.x + 1,\n                };\n            default:\n                return position;\n        }\n    }\n\n    extractTeleportDataFromTiled(data) {\n        const [mapKey, position] = data.trim().split(':');\n        const [x, y] = position.split(',');\n\n        return {\n            mapKey,\n            x: Number.parseInt(x, 10),\n            y: Number.parseInt(y, 10),\n        };\n    }\n\n    extractNpcDataFromTiled(data) {\n        const [npcKey, config] = data.trim().split(':');\n        const [movementType, delay, area, direction] = config.split(';');\n\n        return {\n            npcKey,\n            movementType,\n            facingDirection: direction,\n            delay: Number.parseInt(delay, 10),\n            area: Number.parseInt(area, 10),\n        };\n    }\n\n    calculateHeroHealthState(health) {\n        if (health > 10) {\n            return 'full';\n        }\n\n        if (health > 0) {\n            return 'half';\n        }\n\n        return 'empty';\n    }\n\n    calculateHeroHealthStates() {\n        return Array.from({ length: this.heroSprite.maxHealth / 20 })\n            .fill(null).map(\n                (v, index) => this.calculateHeroHealthState(\n                    Math.max(this.heroSprite.health - (20 * index), 0)\n                )\n            );\n    }\n\n    updateHeroHealthUi(healthStates) {\n        const customEvent = new CustomEvent('hero-health', {\n            detail: {\n                healthStates,\n            },\n        });\n\n        window.dispatchEvent(customEvent);\n    }\n\n    updateHeroCoinUi(heroCoins) {\n        const customEvent = new CustomEvent('hero-coin', {\n            detail: {\n                heroCoins,\n            },\n        });\n\n        window.dispatchEvent(customEvent);\n    }\n\n    getEnemySpecies(enemyType) {\n        if (enemyType.includes('slime')) {\n            return 'slime';\n        }\n\n        return 'slime';\n    }\n\n    getEnemyColor(enemyType) {\n        if (enemyType.includes('red')) {\n            return 0xF1374B;\n        }\n\n        if (enemyType.includes('green')) {\n            return 0x2BBD6E;\n        }\n\n        if (enemyType.includes('yellow')) {\n            return 0xFFFF4F;\n        }\n\n        return 0x00A0DC;\n    }\n\n    getEnemyAttackSpeed(enemyType) {\n        if (enemyType.includes('red')) {\n            return 2000;\n        }\n\n        if (enemyType.includes('green')) {\n            return 3000;\n        }\n\n        if (enemyType.includes('yellow')) {\n            return 4000;\n        }\n\n        return 5000;\n    }\n\n    spawnItem(position) {\n        const isDebugMode = this.physics.config.debug;\n        const itemChance = PhaserMath.Between(1, isDebugMode ? 2 : 5);\n        if (itemChance === 1) {\n            const itemType = PhaserMath.Between(1, 2);\n\n            if (itemType === 1) {\n                const item = this.physics.add\n                    .sprite(position.x, position.y, 'heart')\n                    .setDepth(1)\n                    .setOrigin(0, 0);\n                item.itemType = 'heart';\n                this.itemsSprites.add(item);\n                item.anims.play('heart_idle');\n            } else if (itemType === 2) {\n                const item = this.physics.add\n                    .sprite(position.x, position.y, 'coin')\n                    .setDepth(1)\n                    .setOrigin(0, 0);\n                item.itemType = 'coin';\n                this.itemsSprites.add(item);\n                item.anims.play('coin_idle');\n            }\n        }\n    }\n\n    calculatePushTilePosition() {\n        const facingDirection = this.gridEngine.getFacingDirection('hero');\n        const position = this.gridEngine.getPosition('hero');\n\n        switch (facingDirection) {\n            case 'up':\n                return {\n                    x: position.x * 16,\n                    y: (position.y - 2) * 16,\n                };\n\n            case 'right':\n                return {\n                    x: (position.x + 2) * 16,\n                    y: position.y * 16,\n                };\n\n            case 'down':\n                return {\n                    x: position.x * 16,\n                    y: (position.y + 2) * 16,\n                };\n\n            case 'left':\n                return {\n                    x: (position.x - 2) * 16,\n                    y: position.y * 16,\n                };\n\n            default:\n                return {\n                    x: position.x * 16,\n                    y: position.y * 16,\n                };\n        }\n    }\n\n    create() {\n        const camera = this.cameras.main;\n        const { game } = this.sys;\n        const isDebugMode = this.physics.config.debug;\n        const { heroStatus, mapKey } = this.initData;\n        const {\n            position: initialPosition,\n            frame: initialFrame,\n            facingDirection: initialFacingDirection,\n            previousPosition,\n            health: heroHealth,\n            maxHealth: heroMaxHealth,\n            coin: heroCoin,\n            canPush: heroCanPush,\n            haveSword: heroHaveSword,\n        } = heroStatus;\n\n        camera.fadeIn(SCENE_FADE_TIME);\n\n        this.enterKey = this.input.keyboard.addKey(Input.Keyboard.KeyCodes.ENTER);\n        this.spaceKey = this.input.keyboard.addKey(Input.Keyboard.KeyCodes.SPACE);\n        this.cursors = this.input.keyboard.createCursorKeys();\n        this.wasd = this.input.keyboard.addKeys({\n            up: Input.Keyboard.KeyCodes.W,\n            down: Input.Keyboard.KeyCodes.S,\n            left: Input.Keyboard.KeyCodes.A,\n            right: Input.Keyboard.KeyCodes.D,\n        });\n\n        // Map\n        const map = this.make.tilemap({ key: mapKey });\n        map.addTilesetImage('tileset', 'tileset');\n\n        if (isDebugMode) {\n            window.phaserGame = game;\n            this.map = map;\n        }\n\n        // Hero\n        this.heroSprite = this.physics.add\n            .sprite(0, 0, 'hero', initialFrame)\n            .setDepth(1);\n        this.heroSprite.health = heroHealth;\n        this.heroSprite.maxHealth = heroMaxHealth;\n        this.heroSprite.coin = heroCoin;\n        this.heroSprite.canPush = heroCanPush;\n        this.heroSprite.haveSword = heroHaveSword;\n        this.updateHeroHealthUi(this.calculateHeroHealthStates());\n        this.updateHeroCoinUi(heroCoin);\n\n        this.heroSprite.restoreHealth = (restore) => {\n            this.heroSprite.health = Math.min(this.heroSprite.health + restore, this.heroSprite.maxHealth);\n            this.updateHeroHealthUi(this.calculateHeroHealthStates());\n        };\n\n        this.heroSprite.increaseMaxHealth = (increase) => {\n            this.heroSprite.maxHealth += increase;\n            this.updateHeroHealthUi(this.calculateHeroHealthStates());\n        };\n\n        this.heroSprite.collectCoin = (coinQuantity) => {\n            this.heroSprite.coin = Math.min(this.heroSprite.coin + coinQuantity, 999);\n            this.updateHeroCoinUi(this.heroSprite.coin);\n        };\n\n        this.heroSprite.takeDamage = (damage) => {\n            this.time.delayedCall(\n                180,\n                () => {\n                    this.heroSprite.health -= damage;\n                    if (this.heroSprite.health <= 0) {\n                        camera.fadeOut(SCENE_FADE_TIME);\n                        this.updateHeroHealthUi([]);\n                        this.updateHeroCoinUi(null);\n                        this.time.delayedCall(\n                            SCENE_FADE_TIME,\n                            () => {\n                                this.isTeleporting = false;\n                                this.scene.start('GameOverScene');\n                            }\n                        );\n                    } else {\n                        this.updateHeroHealthUi(this.calculateHeroHealthStates());\n                        this.tweens.add({\n                            targets: this.heroSprite,\n                            alpha: 0,\n                            ease: PhaserMath.Easing.Elastic.InOut,\n                            duration: 70,\n                            repeat: 1,\n                            yoyo: true,\n                        });\n                    }\n                }\n            );\n        };\n        this.heroSprite.body.setSize(14, 14);\n        this.heroSprite.body.setOffset(9, 13);\n        this.heroActionCollider = createInteractiveGameObject(\n            this,\n            this.heroSprite.x + 9,\n            this.heroSprite.y + 36,\n            14,\n            8,\n            'attack',\n            isDebugMode\n        );\n        this.heroPresenceCollider = createInteractiveGameObject(\n            this,\n            this.heroSprite.x + 16,\n            this.heroSprite.y + 20,\n            320, // TODO\n            320, // TODO\n            'presence',\n            isDebugMode,\n            { x: 0.5, y: 0.5 }\n        );\n        this.heroObjectCollider = createInteractiveGameObject(\n            this,\n            this.heroSprite.x + 16,\n            this.heroSprite.y + 20,\n            24,\n            24,\n            'object',\n            isDebugMode,\n            { x: 0.5, y: 0.5 }\n        );\n\n        // Items\n        this.itemsSprites = this.add.group();\n        if (!this.anims.exists('heart_idle')) {\n            this.anims.create({\n                key: 'heart_idle',\n                frames: this.getFramesForAnimation('heart', 'idle'),\n                frameRate: 4,\n                repeat: -1,\n                yoyo: false,\n            });\n        }\n\n        if (!this.anims.exists('coin_idle')) {\n            this.anims.create({\n                key: 'coin_idle',\n                frames: this.getFramesForAnimation('coin', 'idle'),\n                frameRate: 4,\n                repeat: -1,\n                yoyo: false,\n            });\n        }\n\n        const enemiesData = [];\n        const elementsLayers = this.add.group();\n        for (let i = 0; i < map.layers.length; i++) {\n            const layer = map.createLayer(i, 'tileset', 0, 0);\n            layer.layer.properties.forEach((property) => {\n                const { value, name } = property;\n\n                if (name === 'type' && value === 'elements') {\n                    elementsLayers.add(layer);\n                }\n            });\n\n            this.physics.add.collider(this.heroSprite, layer);\n        }\n\n        const npcsKeys = [];\n        const dataLayer = map.getObjectLayer('actions');\n        dataLayer.objects.forEach((data) => {\n            const { properties, x, y } = data;\n\n            properties.forEach((property) => {\n                const { name, type, value } = property;\n\n                switch (name) {\n                    case 'dialog': {\n                        const customCollider = createInteractiveGameObject(\n                            this,\n                            x,\n                            y,\n                            16,\n                            16,\n                            'dialog',\n                            isDebugMode\n                        );\n\n                        this.physics.add.overlap(this.heroActionCollider, customCollider, (objA, objB) => {\n                            if (this.isShowingDialog) {\n                                return;\n                            }\n\n                            if (Input.Keyboard.JustDown(this.enterKey)) {\n                                const characterName = value;\n                                const customEvent = new CustomEvent('new-dialog', {\n                                    detail: {\n                                        characterName,\n                                    },\n                                });\n\n                                window.dispatchEvent(customEvent);\n                                const dialogBoxFinishedEventListener = () => {\n                                    window.removeEventListener(\n                                        `${characterName}-dialog-finished`,\n                                        dialogBoxFinishedEventListener\n                                    );\n\n                                    // just to consume the JustDown\n                                    Input.Keyboard.JustDown(this.enterKey);\n                                    Input.Keyboard.JustDown(this.spaceKey);\n\n                                    this.time.delayedCall(100, () => {\n                                        this.isShowingDialog = false;\n                                    });\n                                };\n                                window.addEventListener(\n                                    `${characterName}-dialog-finished`,\n                                    dialogBoxFinishedEventListener\n                                );\n\n                                this.isShowingDialog = true;\n                            }\n                        });\n\n                        break;\n                    }\n\n                    case 'npcData': {\n                        const {\n                            facingDirection,\n                            movementType,\n                            npcKey,\n                            delay,\n                            area,\n                        } = this.extractNpcDataFromTiled(value);\n\n                        npcsKeys.push({\n                            facingDirection,\n                            movementType,\n                            npcKey,\n                            delay,\n                            area,\n                            x,\n                            y,\n                        });\n                        break;\n                    }\n\n                    case 'itemData': {\n                        const [itemType] = value.split(':');\n\n                        switch (itemType) {\n                            case 'coin': {\n                                const item = this.physics.add\n                                    .sprite(x, y, 'coin')\n                                    .setDepth(1)\n                                    .setOrigin(0, 1);\n\n                                item.itemType = 'coin';\n                                this.itemsSprites.add(item);\n                                item.anims.play('coin_idle');\n                                break;\n                            }\n\n                            case 'heart_container': {\n                                const item = this.physics.add\n                                    .sprite(x, y, 'heart_container')\n                                    .setDepth(1)\n                                    .setOrigin(0, 1);\n\n                                item.itemType = 'heart_container';\n                                this.itemsSprites.add(item);\n                                break;\n                            }\n\n                            case 'heart': {\n                                const item = this.physics.add\n                                    .sprite(x, y, 'heart')\n                                    .setDepth(1)\n                                    .setOrigin(0, 1);\n\n                                item.itemType = 'heart';\n                                this.itemsSprites.add(item);\n                                item.anims.play('heart_idle');\n                                break;\n                            }\n\n                            case 'sword': {\n                                if (!heroHaveSword) {\n                                    const item = this.physics.add\n                                        .sprite(x, y, 'sword')\n                                        .setDepth(1)\n                                        .setOrigin(0, 1);\n\n                                    item.itemType = 'sword';\n                                    this.itemsSprites.add(item);\n                                }\n\n                                break;\n                            }\n\n                            case 'push': {\n                                if (!heroCanPush) {\n                                    const item = this.physics.add\n                                        .sprite(x, y, 'push')\n                                        .setDepth(1)\n                                        .setOrigin(0, 1);\n\n                                    item.itemType = 'push';\n                                    this.itemsSprites.add(item);\n                                }\n\n                                break;\n                            }\n\n                            default: {\n                                break;\n                            }\n                        }\n\n                        break;\n                    }\n\n                    case 'enemyData': {\n                        const [enemyType, enemyAI, speed, health] = value.split(':');\n                        enemiesData.push({\n                            x,\n                            y,\n                            speed: Number.parseInt(speed, 10),\n                            enemyType,\n                            enemySpecies: this.getEnemySpecies(enemyType),\n                            enemyAI,\n                            enemyName: `${enemyType}_${enemiesData.length}`,\n                            health: Number.parseInt(health, 10),\n                        });\n                        break;\n                    }\n\n                    case 'teleportTo': {\n                        const customCollider = createInteractiveGameObject(\n                            this,\n                            x,\n                            y,\n                            16,\n                            16,\n                            'teleport',\n                            isDebugMode\n                        );\n\n                        const {\n                            mapKey: teleportToMapKey,\n                            x: teleportToX,\n                            y: teleportToY,\n                        } = this.extractTeleportDataFromTiled(value);\n\n                        const overlapCollider = this.physics.add.overlap(this.heroSprite, customCollider, () => {\n                            // camera.stopFollow();\n                            this.physics.world.removeCollider(overlapCollider);\n                            const facingDirection = this.gridEngine.getFacingDirection('hero');\n                            camera.fadeOut(SCENE_FADE_TIME);\n                            // this.scene.pause();\n                            this.isTeleporting = true;\n                            // this.gridEngine.stopMovement('hero');\n\n                            this.time.delayedCall(\n                                SCENE_FADE_TIME,\n                                () => {\n                                    this.isTeleporting = false;\n                                    this.scene.restart({\n                                        heroStatus: {\n                                            position: { x: teleportToX, y: teleportToY },\n                                            previousPosition: this.calculatePreviousTeleportPosition(),\n                                            frame: `hero_idle_${facingDirection}_01`,\n                                            facingDirection,\n                                            health: this.heroSprite.health,\n                                            maxHealth: this.heroSprite.maxHealth,\n                                            coin: this.heroSprite.coin,\n                                            canPush: this.heroSprite.canPush,\n                                            haveSword: this.heroSprite.haveSword,\n                                        },\n                                        mapKey: teleportToMapKey,\n                                    });\n                                }\n                            );\n                        });\n\n                        break;\n                    }\n\n                    default: {\n                        break;\n                    }\n                }\n            });\n        });\n\n        // If we're in the city and no dragon NPC was placed in Tiled, spawn one at a random walkable spot\n        if (mapKey === 'home_page_city' && !npcsKeys.some((n) => n.npcKey === 'dragon')) {\n            const isWalkable = (tileX, tileY) => {\n                // A tile is walkable if none of the layers has a collidable tile at that location\n                return map.layers.every((layer) => {\n                    const t = layer.tilemapLayer.getTileAt(tileX, tileY);\n                    return !(t?.properties?.ge_collide);\n                });\n            };\n\n            const getRandomWalkableTile = () => {\n                const centerX = Math.floor(map.width / 2);\n                const centerY = Math.floor(map.height / 2);\n\n                // Try near center first\n                const maxAttemptsNearCenter = 400;\n                const radius = 8; // tiles\n                for (let i = 0; i < maxAttemptsNearCenter; i++) {\n                    const tileX = PhaserMath.Clamp(\n                        centerX + PhaserMath.Between(-radius, radius),\n                        1,\n                        map.width - 2\n                    );\n                    const tileY = PhaserMath.Clamp(\n                        centerY + PhaserMath.Between(-radius, radius),\n                        1,\n                        map.height - 2\n                    );\n                    if (isWalkable(tileX, tileY)) {\n                        return { tileX, tileY };\n                    }\n                }\n\n                // Fallback anywhere on map\n                const maxAttempts = 500;\n                for (let i = 0; i < maxAttempts; i++) {\n                    const tileX = PhaserMath.Between(1, map.width - 2);\n                    const tileY = PhaserMath.Between(1, map.height - 2);\n                    if (isWalkable(tileX, tileY)) {\n                        return { tileX, tileY };\n                    }\n                }\n                // Final fallback\n                return { tileX: centerX, tileY: centerY };\n            };\n\n            const { tileX, tileY } = getRandomWalkableTile();\n            // Convert to pixel coordinates matching Tiled object placement used elsewhere (note the +1 on y)\n            npcsKeys.push({\n                npcKey: 'dragon',\n                movementType: NPC_MOVEMENT_RANDOM,\n                delay: 1000,\n                area: 4,\n                facingDirection: 'down',\n                x: tileX * 16,\n                y: (tileY + 1) * 16,\n            });\n        }\n\n        camera.startFollow(this.heroSprite, true);\n        camera.setFollowOffset(-this.heroSprite.width, -this.heroSprite.height);\n        camera.setBounds(\n            0,\n            0,\n            Math.max(map.widthInPixels, game.scale.gameSize.width),\n            Math.max(map.heightInPixels, game.scale.gameSize.height)\n        );\n\n        if (map.widthInPixels < game.scale.gameSize.width) {\n            camera.setPosition(\n                (game.scale.gameSize.width - map.widthInPixels) / 2\n            );\n        }\n\n        if (map.heightInPixels < game.scale.gameSize.height) {\n            camera.setPosition(\n                camera.x,\n                (game.scale.gameSize.height - map.heightInPixels) / 2\n            );\n        }\n\n        const gridEngineConfig = {\n            characters: [\n                {\n                    id: 'hero',\n                    sprite: this.heroSprite,\n                    startPosition: initialPosition,\n                    offsetY: 4,\n                },\n            ],\n        };\n\n        this.physics.add.overlap(this.heroSprite, this.itemsSprites, (objA, objB) => {\n            const item = [objA, objB].find((obj) => obj !== this.heroSprite);\n\n            if (item.itemType === 'heart') {\n                this.heroSprite.restoreHealth(20);\n                item.setVisible(false);\n                item.destroy();\n            }\n\n            if (item.itemType === 'coin') {\n                this.heroSprite.collectCoin(1);\n                item.setVisible(false);\n                item.destroy();\n            }\n\n            if (item.itemType === 'heart_container') {\n                this.heroSprite.increaseMaxHealth(20);\n                item.setVisible(false);\n                item.destroy();\n            }\n\n            if (item.itemType === 'sword') {\n                const customEvent = new CustomEvent('new-dialog', {\n                    detail: {\n                        characterName: item.itemType,\n                    },\n                });\n                window.dispatchEvent(customEvent);\n                this.isShowingDialog = true;\n                const dialogBoxFinishedEventListener = () => {\n                    window.removeEventListener(\n                        `${item.itemType}-dialog-finished`,\n                        dialogBoxFinishedEventListener\n                    );\n\n                    this.time.delayedCall(100, () => {\n                        this.isShowingDialog = false;\n                    });\n                };\n                window.addEventListener(\n                    `${item.itemType}-dialog-finished`,\n                    dialogBoxFinishedEventListener\n                );\n\n                this.heroSprite.haveSword = true;\n                item.setVisible(false);\n                item.destroy();\n            }\n\n            if (item.itemType === 'push') {\n                const customEvent = new CustomEvent('new-dialog', {\n                    detail: {\n                        characterName: item.itemType,\n                    },\n                });\n                window.dispatchEvent(customEvent);\n                this.isShowingDialog = true;\n                const dialogBoxFinishedEventListener = () => {\n                    window.removeEventListener(\n                        `${item.itemType}-dialog-finished`,\n                        dialogBoxFinishedEventListener\n                    );\n\n                    this.time.delayedCall(100, () => {\n                        this.isShowingDialog = false;\n                    });\n                };\n                window.addEventListener(\n                    `${item.itemType}-dialog-finished`,\n                    dialogBoxFinishedEventListener\n                );\n\n                this.heroSprite.canPush = true;\n                item.setVisible(false);\n                item.destroy();\n            }\n        });\n\n        this.enemiesSprites = this.add.group();\n        enemiesData.forEach((enemyData, index) => {\n            const { enemySpecies, enemyType, x, y, enemyName, speed, enemyAI, health } = enemyData;\n            const enemy = this.physics.add.sprite(0, 0, enemyType, `${enemySpecies}_idle_01`);\n            enemy.setTint(this.getEnemyColor(enemyType));\n            enemy.name = enemyName;\n            enemy.enemyType = enemyType;\n            enemy.enemySpecies = enemySpecies;\n            enemy.enemyAI = enemyAI;\n            enemy.speed = speed;\n            enemy.health = health;\n            enemy.isAttacking = false;\n            enemy.updateFollowHeroPosition = true;\n            enemy.lastKnowHeroPosition = { x: 0, y: 0 };\n            enemy.body.setSize(14, 14);\n            enemy.body.setOffset(9, 21);\n            this.enemiesSprites.add(enemy);\n            enemy.takeDamage = (damage, isSpaceJustDown) => {\n                if (isSpaceJustDown) {\n                    enemy.health -= damage;\n\n                    if (enemy.health < 0) {\n                        enemy.setVisible(false);\n                        const position = this.gridEngine.getPosition(enemy.name);\n                        this.spawnItem({\n                            x: position.x * 16,\n                            y: position.y * 16,\n                        });\n                        this.gridEngine.setPosition(enemy.name, { x: 1, y: 1 });\n                        enemy.destroy();\n                    } else {\n                        this.tweens.add({\n                            targets: enemy,\n                            alpha: 0,\n                            ease: PhaserMath.Easing.Elastic.InOut,\n                            duration: 70,\n                            repeat: 1,\n                            yoyo: true,\n                        });\n                    }\n                }\n            };\n\n            if (!this.anims.exists(`${enemySpecies}_idle`)) {\n                this.anims.create({\n                    key: `${enemySpecies}_idle`,\n                    frames: this.getFramesForAnimation(enemySpecies, 'idle'),\n                    frameRate: 8,\n                    repeat: -1,\n                    yoyo: false,\n                });\n            }\n\n            if (!this.anims.exists(`${enemySpecies}_attack`)) {\n                this.anims.create({\n                    key: `${enemySpecies}_attack`,\n                    frames: this.getFramesForAnimation(enemySpecies, 'attack'),\n                    frameRate: 12,\n                    repeat: 0,\n                    yoyo: false,\n                });\n            }\n\n            if (!this.anims.exists(`${enemySpecies}_walking`)) {\n                this.anims.create({\n                    key: `${enemySpecies}_walking`,\n                    frames: this.getFramesForAnimation(enemySpecies, 'walking'),\n                    frameRate: 8,\n                    repeat: -1,\n                    yoyo: false,\n                });\n            }\n\n            if (!this.anims.exists(`${enemySpecies}_die`)) {\n                this.anims.create({\n                    key: `${enemySpecies}_die`,\n                    frames: this.getFramesForAnimation(enemySpecies, 'die'),\n                    frameRate: 8,\n                    repeat: 0,\n                    yoyo: false,\n                });\n            }\n\n            enemy.anims.play(`${enemySpecies}_idle`);\n            enemy.on('animationcomplete', (animation) => {\n                if (animation.key.includes('attack')) {\n                    enemy.anims.play(`${enemySpecies}_idle`);\n                }\n            });\n\n            gridEngineConfig.characters.push({\n                id: enemyName,\n                sprite: enemy,\n                startPosition: { x: x / 16, y: (y / 16) - 1 },\n                speed,\n                offsetY: -4,\n            });\n        });\n\n        const npcSprites = this.add.group();\n        npcsKeys.forEach((npcData) => {\n            const { npcKey, x, y, facingDirection = 'down' } = npcData;\n            const initialFrame = `${npcKey}_idle_${facingDirection}_01`;\n            const npc = this.physics.add.sprite(0, 0, npcKey, initialFrame);\n            npc.body.setSize(14, 14);\n            npc.body.setOffset(9, 13);\n            npcSprites.add(npc);\n\n            this.createPlayerWalkingAnimation(npcKey, 'walking_up');\n            this.createPlayerWalkingAnimation(npcKey, 'walking_right');\n            this.createPlayerWalkingAnimation(npcKey, 'walking_down');\n            this.createPlayerWalkingAnimation(npcKey, 'walking_left');\n\n            gridEngineConfig.characters.push({\n                id: npcKey,\n                sprite: npc,\n                startPosition: { x: x / 16, y: (y / 16) - 1 },\n                speed: 1,\n                offsetY: 4,\n            });\n        });\n\n        // Movement\n        this.createPlayerWalkingAnimation('hero', 'walking_up');\n        this.createPlayerWalkingAnimation('hero', 'walking_right');\n        this.createPlayerWalkingAnimation('hero', 'walking_down');\n        this.createPlayerWalkingAnimation('hero', 'walking_left');\n\n        // Attack\n        this.createPlayerAttackAnimation('hero', 'attack_up', 12, 0, false);\n        this.createPlayerAttackAnimation('hero', 'attack_right', 12, 0, false);\n        this.createPlayerAttackAnimation('hero', 'attack_down', 12, 0, false);\n        this.createPlayerAttackAnimation('hero', 'attack_left', 12, 0, false);\n\n        this.heroSprite.on('animationcomplete', (animation, animationFrame) => {\n            if (animation.key.includes('attack')) {\n                this.isAttacking = false;\n            }\n        });\n\n        this.heroSprite.on('animationstop', (animation, animationFrame) => {\n            if (animation.key.includes('attack')) {\n                this.isAttacking = false;\n            }\n        });\n\n        this.gridEngine.create(map, gridEngineConfig);\n\n        // NPCs\n        npcsKeys.forEach((npcData) => {\n            const {\n                movementType,\n                npcKey,\n                delay,\n                area,\n            } = npcData;\n\n            if (movementType === NPC_MOVEMENT_RANDOM) {\n                this.gridEngine.moveRandomly(npcKey, delay, area);\n            }\n        });\n\n        // enemies\n        enemiesData.forEach((enemyData) => {\n            const {\n                enemyAI,\n                enemyName,\n                speed,\n            } = enemyData;\n\n            this.gridEngine.moveRandomly(enemyName, 1000, 4);\n        });\n        this.physics.add.overlap(this.heroObjectCollider, this.enemiesSprites, (objA, objB) => {\n            const enemy = [objA, objB].find((obj) => obj !== this.heroObjectCollider);\n            if (enemy.isAttacking || this.gridEngine.isMoving(enemy.name)) {\n                return;\n            }\n\n            enemy.anims.play(`${enemy.enemySpecies}_attack`);\n            this.heroSprite.takeDamage(10);\n            enemy.isAttacking = true;\n            this.time.delayedCall(\n                this.getEnemyAttackSpeed(enemy.enemyType),\n                () => {\n                    enemy.isAttacking = false;\n                }\n            );\n        });\n\n        this.physics.add.overlap(this.heroPresenceCollider, this.enemiesSprites, (objA, objB) => {\n            const enemy = [objA, objB].find((obj) => obj !== this.heroPresenceCollider);\n\n            if (enemy.canSeeHero && enemy.enemyAI === ENEMY_AI_TYPE) {\n                enemy.isFollowingHero = true;\n                if (enemy.updateFollowHeroPosition) {\n                    const facingDirection = this.gridEngine.getFacingDirection('hero');\n                    const heroPosition = this.gridEngine.getPosition('hero');\n                    const heroBackPosition = this.getBackPosition(facingDirection, heroPosition);\n\n                    if (\n                        enemy.lastKnowHeroPosition.x !== heroBackPosition.x\n                        || enemy.lastKnowHeroPosition.y !== heroBackPosition.y\n                    ) {\n                        const enemyPosition = this.gridEngine.getPosition(enemy.name);\n                        enemy.lastKnowHeroPosition = heroBackPosition;\n\n                        if (\n                            heroBackPosition.x === enemyPosition.x\n                            && heroBackPosition.y === enemyPosition.y\n                        ) {\n                            enemy.updateFollowHeroPosition = false;\n                            // TODO can attack I guess\n                            return;\n                        }\n\n                        enemy.updateFollowHeroPosition = false;\n                        this.time.delayedCall(1000, () => {\n                            enemy.updateFollowHeroPosition = true;\n                        });\n\n                        this.gridEngine.setSpeed(enemy.name, Math.ceil(enemy.speed * 1.5));\n                        this.gridEngine.moveTo(enemy.name, heroBackPosition, {\n                            NoPathFoundStrategy: 'CLOSEST_REACHABLE',\n                        });\n                    }\n                }\n            }\n\n            enemy.canSeeHero = enemy.body.embedded;\n        });\n\n        // Animations\n        this.gridEngine.movementStarted().subscribe(({ charId, direction }) => {\n            if (charId === 'hero') {\n                this.heroSprite.anims.play(`hero_walking_${direction}`);\n            } else {\n                const npc = npcSprites.getChildren().find((npcSprite) => npcSprite.texture.key === charId);\n                if (npc) {\n                    npc.anims.play(`${charId}_walking_${direction}`);\n                    return;\n                }\n\n                const enemy = this.enemiesSprites.getChildren().find((enemySprite) => enemySprite.name === charId);\n                if (enemy) {\n                    enemy.anims.play(`${enemy.enemySpecies}_walking`);\n                }\n            }\n        });\n\n        this.gridEngine.movementStopped().subscribe(({ charId, direction }) => {\n            if (charId === 'hero') {\n                this.heroSprite.anims.stop();\n                this.heroSprite.setFrame(this.getStopFrame(direction, charId));\n            } else {\n                const npc = npcSprites.getChildren().find((npcSprite) => npcSprite.texture.key === charId);\n                if (npc) {\n                    npc.anims.stop();\n                    npc.setFrame(this.getStopFrame(direction, charId));\n                    return;\n                }\n\n                const enemy = this.enemiesSprites.getChildren().find((enemySprite) => enemySprite.name === charId);\n                if (enemy) {\n                    enemy.anims.play(`${enemy.enemySpecies}_idle`, true);\n                }\n            }\n        });\n\n        this.gridEngine.directionChanged().subscribe(({ charId, direction }) => {\n            if (charId === 'hero') {\n                this.heroSprite.setFrame(this.getStopFrame(direction, charId));\n            } else {\n                const npc = npcSprites.getChildren().find((npcSprite) => npcSprite.texture.key === charId);\n                if (npc) {\n                    npc.setFrame(this.getStopFrame(direction, charId));\n                    return;\n                }\n\n                const enemy = this.enemiesSprites.getChildren().find((enemySprite) => enemySprite.name === charId);\n                if (enemy) {\n                    enemy.anims.play(`${enemy.enemySpecies}_idle`);\n                }\n            }\n        });\n\n        this.heroActionCollider.update = () => {\n            const facingDirection = this.gridEngine.getFacingDirection('hero');\n            this.heroPresenceCollider.setPosition(\n                this.heroSprite.x + 16,\n                this.heroSprite.y + 20\n            );\n\n            this.heroObjectCollider.setPosition(\n                this.heroSprite.x + 16,\n                this.heroSprite.y + 20\n            );\n\n            switch (facingDirection) {\n                case 'down': {\n                    this.heroActionCollider.setSize(14, 8);\n                    this.heroActionCollider.body.setSize(14, 8);\n                    this.heroActionCollider.setX(this.heroSprite.x + 9);\n                    this.heroActionCollider.setY(this.heroSprite.y + 36);\n\n                    break;\n                }\n\n                case 'up': {\n                    this.heroActionCollider.setSize(14, 8);\n                    this.heroActionCollider.body.setSize(14, 8);\n                    this.heroActionCollider.setX(this.heroSprite.x + 9);\n                    this.heroActionCollider.setY(this.heroSprite.y + 12);\n\n                    break;\n                }\n\n                case 'left': {\n                    this.heroActionCollider.setSize(8, 14);\n                    this.heroActionCollider.body.setSize(8, 14);\n                    this.heroActionCollider.setX(this.heroSprite.x);\n                    this.heroActionCollider.setY(this.heroSprite.y + 21);\n\n                    break;\n                }\n\n                case 'right': {\n                    this.heroActionCollider.setSize(8, 14);\n                    this.heroActionCollider.body.setSize(8, 14);\n                    this.heroActionCollider.setX(this.heroSprite.x + 24);\n                    this.heroActionCollider.setY(this.heroSprite.y + 21);\n\n                    break;\n                }\n\n                default: {\n                    break;\n                }\n            }\n        };\n\n        this.physics.add.overlap(this.heroActionCollider, npcSprites, (objA, objB) => {\n            if (this.isShowingDialog) {\n                return;\n            }\n\n            const npc = [objA, objB].find((obj) => obj !== this.heroActionCollider);\n\n            if (Input.Keyboard.JustDown(this.enterKey)) {\n                if (this.gridEngine.isMoving(npc.texture.key)) {\n                    return;\n                }\n\n                const characterName = npc.texture.key;\n                const customEvent = new CustomEvent('new-dialog', {\n                    detail: {\n                        characterName,\n                    },\n                });\n\n                window.dispatchEvent(customEvent);\n                const dialogBoxFinishedEventListener = () => {\n                    window.removeEventListener(`${characterName}-dialog-finished`, dialogBoxFinishedEventListener);\n                    this.gridEngine.moveRandomly(characterName);\n\n                    // just to consume the JustDown\n                    Input.Keyboard.JustDown(this.enterKey);\n                    Input.Keyboard.JustDown(this.spaceKey);\n\n                    this.time.delayedCall(100, () => {\n                        this.isShowingDialog = false;\n                        const { delay, area } = npcsKeys.find((npcData) => npcData.npcKey === characterName);\n                        this.gridEngine.moveRandomly(characterName, delay, area);\n                    });\n                };\n                window.addEventListener(`${characterName}-dialog-finished`, dialogBoxFinishedEventListener);\n\n                this.isShowingDialog = true;\n                const facingDirection = this.gridEngine.getFacingDirection('hero');\n                this.gridEngine.stopMovement(characterName);\n                npc.setFrame(this.getStopFrame(this.getOppositeDirection(facingDirection), characterName));\n            }\n        });\n\n        this.physics.add.overlap(this.heroActionCollider, elementsLayers, (objA, objB) => {\n            const tile = [objA, objB].find((obj) => obj !== this.heroActionCollider);\n\n            // Handles attack\n            if (tile?.index > 0 && !tile.wasHandled) {\n                switch (tile.index) {\n                    case BUSH_INDEX: {\n                        if (this.isAttacking) {\n                            tile.wasHandled = true;\n\n                            this.time.delayedCall(\n                                ATTACK_DELAY_TIME,\n                                () => {\n                                    tile.setVisible(false);\n                                    this.spawnItem({\n                                        x: tile.pixelX,\n                                        y: tile.pixelY,\n                                    });\n                                    tile.destroy();\n                                }\n                            );\n                        }\n\n                        break;\n                    }\n\n                    case BOX_INDEX: {\n                        if (this.heroSprite.canPush && this.isAttacking) {\n                            const newPosition = this.calculatePushTilePosition();\n                            const canBePushed = map.layers.every((layer) => {\n                                const t = layer.tilemapLayer.getTileAtWorldXY(\n                                    newPosition.x,\n                                    newPosition.y\n                                );\n\n                                return !t?.properties?.ge_collide;\n                            });\n\n                            if (canBePushed && !tile.isMoved) {\n                                tile.isMoved = true;\n                                this.tweens.add({\n                                    targets: tile,\n                                    pixelX: newPosition.x,\n                                    pixelY: newPosition.y,\n                                    ease: 'Power2', // PhaserMath.Easing\n                                    duration: 700,\n                                    onComplete: () => {\n                                        tile.setVisible(false);\n                                        const newTile = tile.layer.tilemapLayer.putTileAt(\n                                            BOX_INDEX,\n                                            newPosition.x / 16,\n                                            newPosition.y / 16,\n                                            true\n                                        );\n\n                                        newTile.properties = {\n                                            ...tile.properties,\n                                        };\n                                        newTile.isMoved = true;\n                                        tile.destroy();\n                                    },\n                                });\n                            }\n                        }\n\n                        break;\n                    }\n\n                    default: {\n                        break;\n                    }\n                }\n            }\n        });\n\n        this.physics.add.overlap(this.heroActionCollider, this.enemiesSprites, (objA, objB) => {\n            const enemy = [objA, objB].find((obj) => obj !== this.heroActionCollider);\n\n            // Handles attack\n            if (this.isAttacking) {\n                const isSpaceJustDown = this.isSpaceJustDown;\n                this.time.delayedCall(\n                    ATTACK_DELAY_TIME,\n                    () => {\n                        enemy.takeDamage(25, isSpaceJustDown);\n                    }\n                );\n            }\n        });\n    }\n\n    update() {\n        this.isSpaceJustDown = Input.Keyboard.JustDown(this.spaceKey);\n\n        if (\n            this.isTeleporting\n            || this.isAttacking\n            || this.isShowingDialog\n        ) {\n            return;\n        }\n\n        if (\n            !this.gridEngine.isMoving('hero')\n            && this.isSpaceJustDown\n            && this.heroSprite.haveSword\n        ) {\n            const facingDirection = this.gridEngine.getFacingDirection('hero');\n            this.heroSprite.anims.play(`hero_attack_${facingDirection}`);\n            this.isAttacking = true;\n            return;\n        }\n\n        this.enemiesSprites.getChildren().forEach((enemy) => {\n            enemy.canSeeHero = enemy.body.embedded;\n            if (!enemy.canSeeHero && enemy.isFollowingHero) {\n                enemy.isFollowingHero = false;\n                this.gridEngine.setSpeed(enemy.name, enemy.speed);\n                this.gridEngine.moveRandomly(enemy.name, 1000, 4);\n            }\n        });\n\n        this.heroActionCollider.update();\n        if (this.cursors.left.isDown || this.wasd.left.isDown) {\n            this.gridEngine.move('hero', 'left');\n        } else if (this.cursors.right.isDown || this.wasd.right.isDown) {\n            this.gridEngine.move('hero', 'right');\n        } else if (this.cursors.up.isDown || this.wasd.up.isDown) {\n            this.gridEngine.move('hero', 'up');\n        } else if (this.cursors.down.isDown || this.wasd.down.isDown) {\n            this.gridEngine.move('hero', 'down');\n        }\n    }\n}\n","export default __webpack_public_path__ + \"static/media/dialog_borderbox.c5432d54.png\";","import { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles((theme) => ({\n    menuWrapper: ({ multiplier }) => ({\n        fontFamily: '\"Press Start 2P\"',\n        fontSize: `${10 * multiplier}px`,\n        textTransform: 'uppercase',\n        position: 'absolute',\n        transform: 'translate(-50%, 0%)',\n    }),\n    menuPositionWrapper: ({ multiplier, position, width, height }) => {\n        const left = window.innerWidth - (width * multiplier);\n        const menuWidth = 160 * multiplier;\n        if (position === 'center') {\n            return {\n                minWidth: `${menuWidth}px`,\n                left: '50%',\n                top: `${(height * multiplier) / 2}px`,\n            };\n        }\n\n        if (position === 'left') {\n            return {\n                minWidth: `${menuWidth}px`,\n                left: `${(95 * multiplier) + left / 2}px`,\n                top: `${50 * multiplier}px`,\n            };\n        }\n\n        return {};\n    },\n    menuItemsWrapper: {\n        textAlign: 'center',\n        padding: 0,\n    },\n    menuItem: ({ multiplier }) => ({\n        cursor: 'pointer',\n        listStyle: 'none',\n        padding: `${5 * multiplier}px`,\n        marginBottom: `${5 * multiplier}px`,\n        backgroundColor: '#94785c',\n        border: `${multiplier}px solid #79584f`,\n    }),\n    selectedMenuItem: ({ multiplier }) => ({\n        fontSize: `${11 * multiplier}px`,\n        border: `${multiplier}px solid #ddd`,\n    }),\n}));\n\nconst GameMenu = ({\n    items,\n    position = 'center',\n    gameSize,\n    onSelected,\n}) => {\n    const {\n        width,\n        height,\n        multiplier,\n    } = gameSize;\n\n    const classes = useStyles({\n        width,\n        height,\n        multiplier,\n        position,\n    });\n\n    const [selectedItemIndex, setSelectedItemIndex] = useState(0);\n\n    useEffect(() => {\n        const handleKeyPressed = (e) => {\n            switch (e.code) {\n                case 'Enter': {\n                    onSelected(items[selectedItemIndex]);\n                    break;\n                }\n\n                case 'ArrowUp': {\n                    if (selectedItemIndex > 0) {\n                        setSelectedItemIndex(\n                            selectedItemIndex - 1\n                        );\n                    }\n\n                    break;\n                }\n\n                case 'ArrowDown': {\n                    if (items.length - 1 > selectedItemIndex) {\n                        setSelectedItemIndex(\n                            selectedItemIndex + 1\n                        );\n                    }\n\n                    break;\n                }\n\n                default: {\n                    break;\n                }\n            }\n        };\n        window.addEventListener('keydown', handleKeyPressed);\n\n        return () => window.removeEventListener('keydown', handleKeyPressed);\n    }, [items, onSelected, selectedItemIndex]);\n\n    return (\n        <div className={classNames(classes.menuWrapper, classes.menuPositionWrapper)}>\n            <ul className={classes.menuItemsWrapper}>\n                {items.map((item, index) => (\n                    <li\n                        key={index}\n                        className={classNames(classes.menuItem, {\n                            [classes.selectedMenuItem]: selectedItemIndex === index,\n                        })}\n                        onMouseEnter={() => {\n                            setSelectedItemIndex(index);\n                        }}\n                        onClick={() => {\n                            onSelected(items[selectedItemIndex]);\n                        }}\n                    >\n                        {item}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default GameMenu;\n","import { useMemo } from 'react';\nimport { animated, useTransition } from 'react-spring';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    dialogMessage: ({ multiplier }) => ({\n        fontFamily: '\"Press Start 2P\"',\n        fontSize: `${6 * multiplier}px`,\n        textTransform: 'uppercase',\n    }),\n}));\n\nconst Message = ({\n    message = [],\n    trail = 35,\n    multiplier = 1,\n    onMessageEnded = () => {},\n    forceShowFullMessage = false,\n}) => {\n    const classes = useStyles({ multiplier });\n    const items = useMemo(\n        () => message.trim().split('').map((letter, index) => ({\n            item: letter,\n            key: index,\n        })),\n        [message]\n    );\n\n    const transitions = useTransition(items, {\n        trail,\n        from: { display: 'none' },\n        enter: { display: '' },\n        onRest: (status, controller, item) => {\n            if (item.key === items.length - 1) {\n                onMessageEnded();\n            }\n        },\n    });\n\n    return (\n        <div className={classes.dialogMessage}>\n            {forceShowFullMessage && (\n                <span>{message}</span>\n            )}\n\n            {!forceShowFullMessage && transitions((styles, { item, key }) => (\n                <animated.span key={key} style={styles}>\n                    {item}\n                </animated.span>\n            ))}\n        </div>\n    );\n};\n\nexport default Message;\n","import { useCallback, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// Images\nimport dialogBorderBox from './assets/images/dialog_borderbox.png';\n\n// Components\nimport Message from './Message';\n\nconst useStyles = makeStyles((theme) => ({\n    dialogWindow: ({ width, height, multiplier }) => {\n        const messageBoxHeight = Math.ceil((height / 3.5) * multiplier);\n        return {\n            imageRendering: 'pixelated',\n            fontFamily: '\"Press Start 2P\"',\n            textTransform: 'uppercase',\n            backgroundColor: '#e2b27e',\n            border: 'solid',\n            borderImage: `url(\"${dialogBorderBox}\") 6 / ${6 * multiplier}px ${6 * multiplier}px ${6 * multiplier}px ${6 * multiplier}px stretch`,\n            padding: `${8 * multiplier}px`,\n            position: 'absolute',\n            top: `${Math.ceil((height * multiplier) - (messageBoxHeight + messageBoxHeight * 0.1))}px`,\n            width: `${Math.ceil(width * 0.8 * multiplier)}px`,\n            left: '50%',\n            transform: 'translate(-50%, 0%)',\n            minHeight: `${messageBoxHeight}px`,\n        };\n    },\n    dialogTitle: ({ multiplier }) => ({\n        fontSize: `${8 * multiplier}px`,\n        marginBottom: `${6 * multiplier}px`,\n        fontWeight: 'bold',\n    }),\n    dialogFooter: ({ multiplier }) => ({\n        fontSize: `${8 * multiplier}px`,\n        cursor: 'pointer',\n        textAlign: 'end',\n        position: 'absolute',\n        right: `${6 * multiplier}px`,\n        bottom: `${6 * multiplier}px`,\n    }),\n}));\n\nconst DialogBox = ({\n    messages,\n    characterName,\n    onDone,\n    gameSize,\n}) => {\n    const {\n        width,\n        height,\n        multiplier,\n    } = gameSize;\n\n    const [currentMessage, setCurrentMessage] = useState(0);\n    const [messageEnded, setMessageEnded] = useState(false);\n    const [forceShowFullMessage, setForceShowFullMessage] = useState(false);\n    const classes = useStyles({\n        width,\n        height,\n        multiplier,\n    });\n\n    const handleClick = useCallback(() => {\n        if (messageEnded) {\n            setMessageEnded(false);\n            setForceShowFullMessage(false);\n            if (currentMessage < messages.length - 1) {\n                setCurrentMessage(currentMessage + 1);\n            } else {\n                setCurrentMessage(0);\n                onDone();\n            }\n        } else {\n            setMessageEnded(true);\n            setForceShowFullMessage(true);\n        }\n    }, [currentMessage, messageEnded, messages.length, onDone]);\n\n    useEffect(() => {\n        const handleKeyPressed = (e) => {\n            if (['Enter', 'Space', 'Escape'].includes(e.code)) {\n                handleClick();\n            }\n        };\n        window.addEventListener('keydown', handleKeyPressed);\n\n        return () => window.removeEventListener('keydown', handleKeyPressed);\n    }, [handleClick]);\n\n    return (\n        <div className={classes.dialogWindow}>\n            <div className={classes.dialogTitle}>\n                {characterName}\n            </div>\n            <Message\n                action={messages[currentMessage].action}\n                message={messages[currentMessage].message}\n                key={currentMessage}\n                multiplier={multiplier}\n                forceShowFullMessage={forceShowFullMessage}\n                onMessageEnded={() => {\n                    setMessageEnded(true);\n                }}\n            />\n            <div\n                onClick={handleClick}\n                className={classes.dialogFooter}\n            >\n                {(currentMessage === messages.length - 1 && messageEnded) ? 'Ok' : 'Next'}\n            </div>\n        </div>\n    );\n};\n\nexport default DialogBox;\n","export default __webpack_public_path__ + \"static/media/coin.cae0d64b.png\";","import { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\n\n// Images\nimport coinImage from './assets/images/coin.png';\n\nconst useStyles = makeStyles((theme) => ({\n    coinContainer: ({ multiplier, width }) => {\n        const left = window.innerWidth - (width * multiplier);\n        return {\n            fontFamily: '\"Press Start 2P\"',\n            fontSize: `${12 * multiplier}px`,\n            textTransform: 'uppercase',\n            imageRendering: 'pixelated',\n            position: 'absolute',\n            top: `${32 * multiplier}px`,\n            left: `${(16 * multiplier) + left / 2}px`,\n            display: 'flex',\n            cursor: 'default',\n            userSelect: 'none',\n        };\n    },\n    coin: ({ multiplier, width }) => ({\n        backgroundSize: `${16 * multiplier}px ${16 * multiplier}px`,\n        background: `url(\"${coinImage}\") no-repeat 0 0`,\n        width: `${16 * multiplier}px`,\n        height: `${16 * multiplier}px`,\n    }),\n    coinFull: ({ multiplier }) => {\n        const strokeSize = multiplier;\n        return {\n            fontSize: `${11 * multiplier}px`,\n            textShadow: `-${strokeSize}px 0 #FFFFFF, 0 ${strokeSize}px #FFFFFF, ${strokeSize}px 0 #FFFFFF, 0 -${strokeSize}px #FFFFFF`,\n            color: '#119923',\n        };\n    },\n}));\n\nconst HeroCoin = ({\n    gameSize,\n    heroCoins,\n}) => {\n    const {\n        width,\n        height,\n        multiplier,\n    } = gameSize;\n\n    const classes = useStyles({\n        width,\n        height,\n        multiplier,\n    });\n\n    return (\n        <div className={classes.coinContainer}>\n            <div className={classes.coin} />\n            <span\n                className={classNames({\n                    [classes.coinFull]: heroCoins >= 999,\n                })}\n            >\n                {heroCoins.toString().padStart(3, '0')}\n            </span>\n        </div>\n    );\n};\n\nexport default HeroCoin;\n","export default __webpack_public_path__ + \"static/media/health.b178a75b.png\";","import { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\n\n// Images\nimport healthImage from './assets/images/health.png';\n\nconst useStyles = makeStyles((theme) => ({\n    healthContainer: ({ multiplier, width }) => {\n        const left = window.innerWidth - (width * multiplier);\n        return {\n            imageRendering: 'pixelated',\n            position: 'absolute',\n            top: `${16 * multiplier}px`,\n            left: `${(16 * multiplier) + left / 2}px`,\n            display: 'flex',\n        };\n    },\n    health: ({ multiplier, width }) => ({\n        width: `${16 * multiplier}px`,\n        height: `${16 * multiplier}px`,\n    }),\n    healthStateFull: ({ multiplier }) => ({\n        backgroundSize: `${48 * multiplier}px ${16 * multiplier}px`,\n        background: `url(\"${healthImage}\") no-repeat 0 0`,\n    }),\n    healthStateHalf: ({ multiplier }) => ({\n        backgroundSize: `${48 * multiplier}px ${16 * multiplier}px`,\n        background: `url(\"${healthImage}\") no-repeat -${16 * multiplier}px 0`,\n    }),\n    healthStateEmpty: ({ multiplier }) => ({\n        backgroundSize: `${48 * multiplier}px ${16 * multiplier}px`,\n        background: `url(\"${healthImage}\") no-repeat -${32 * multiplier}px 0`,\n    }),\n}));\n\nconst HeroHealth = ({\n    gameSize,\n    healthStates,\n}) => {\n    const {\n        width,\n        height,\n        multiplier,\n    } = gameSize;\n\n    const classes = useStyles({\n        width,\n        height,\n        multiplier,\n    });\n\n    return (\n        <div className={classes.healthContainer}>\n            {healthStates.map((healthState, index) => (\n                <div\n                    key={index}\n                    className={classNames(classes.health, {\n                        [classes.healthStateFull]: healthState === 'full',\n                        [classes.healthStateHalf]: healthState === 'half',\n                        [classes.healthStateEmpty]: healthState === 'empty',\n                    })}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default HeroHealth;\n","import {useCallback, useEffect, useState} from 'react';\nimport Phaser from 'phaser';\nimport GridEngine from 'grid-engine';\nimport BootScene from './game/scenes/BootScene';\nimport MainMenuScene from './game/scenes/MainMenuScene';\nimport GameOverScene from './game/scenes/GameOverScene';\nimport GameScene from './game/scenes/GameScene';\nimport {makeStyles} from '@material-ui/core/styles';\nimport dialogBorderBox from './game/assets/images/dialog_borderbox.png';\nimport GameMenu from \"./game/GameMenu\";\nimport DialogBox from \"./game/DialogBox\";\nimport HeroCoin from \"./game/HeroCoin\";\nimport HeroHealth from \"./game/HeroHealth\";\nimport './App.css';\nimport {calculateGameSize} from \"./game/utils\";\n\nconst { width, height, multiplier } = calculateGameSize();\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    overflow: 'auto',\n  },\n  postContainer: {\n    maxWidth: '90%',\n    maxHeight: '90%',\n  },\n  gameContentWrapper: {\n    width: `${width * multiplier}px`,\n    height: `${height * multiplier}px`,\n    margin: 'auto',\n    padding: 0,\n    overflow: 'hidden',\n    '& canvas': {\n      imageRendering: 'pixelated',\n      '-ms-interpolation-mode': 'nearest-neighbor',\n      boxShadow: '0px 0px 0px 3px rgba(0,0,0,0.75)',\n    },\n  },\n  pageWrapper: {\n    background: theme.palette.background.paper,\n    padding: 0,\n    margin: 0,\n  },\n  loadingText: {\n    fontFamily: '\"Press Start 2P\"',\n    marginTop: '30px',\n    marginLeft: '30px',\n  },\n  preLoadDialogImage: {\n    backgroundImage: `url(\"${dialogBorderBox}\")`,\n    backgroundSize: '1px',\n    backgroundRepeat: 'no-repeat',\n  },\n  gameWrapper: {\n    color: '#FFFFFF',\n  },\n  gameGif: {\n    width: '100%',\n    position: 'absolute',\n    imageRendering: 'pixelated',\n    top: 0,\n  },\n}));\n\nconst dialogs = {\n  \"npc_01\": [{\n    \"message\": \"Hello\",\n  }, {\n    \"message\": \"How are you?\",\n  }],\n  \"npc_02\": [{\n    \"message\": \"Hello there\",\n  }],\n  \"npc_03\": [{\n    \"message\": \"Hi\",\n  }, {\n    \"message\": \"Ok bye!\",\n  }],\n  \"npc_04\": [{\n    \"message\": \"Hey\",\n  }],\n  \"sword\": [{\n    \"message\": \"You got a sword\",\n  }],\n  \"push\": [{\n    \"message\": \"You can push boxes now\",\n  }],\n  \"sign_01\": [{\n    \"message\": \"You can read this!\",\n  }],\n  \"book_01\": [{\n    \"message\": \"Welcome to the game!\",\n  }]\n};\n\nfunction App() {\n  const classes = useStyles();\n  const [messages, setMessages] = useState([]);\n  const [characterName, setCharacterName] = useState('');\n  const [gameMenuItems, setGameMenuItems] = useState([]);\n  const [gameMenuPosition, setGameMenuPosition] = useState('center');\n  const [heroHealthStates, setHeroHealthStates] = useState([]);\n  const [heroCoins, setHeroCoins] = useState(null);\n\n  const handleMessageIsDone = useCallback(() => {\n    const customEvent = new CustomEvent(`${characterName}-dialog-finished`, {\n      detail: {},\n    });\n    window.dispatchEvent(customEvent);\n\n    setMessages([]);\n    setCharacterName('');\n  }, [characterName]);\n\n  const handleMenuItemSelected = useCallback((selectedItem) => {\n    setGameMenuItems([]);\n\n    const customEvent = new CustomEvent('menu-item-selected', {\n      detail: {\n        selectedItem,\n      },\n    });\n    window.dispatchEvent(customEvent);\n  }, []);\n\n  useEffect(() => {\n    const game = new Phaser.Game({\n      type: Phaser.AUTO,\n      title: 'some-game-title',\n      parent: 'game-content',\n      orientation: Phaser.Scale.LANDSCAPE,\n      localStorageName: 'some-game-title',\n      width,\n      height,\n      autoRound: true,\n      pixelArt: true,\n      scale: {\n        autoCenter: Phaser.Scale.CENTER_BOTH,\n        mode: Phaser.Scale.ENVELOP,\n      },\n      scene: [\n        BootScene,\n        MainMenuScene,\n        GameScene,\n        GameOverScene,\n      ],\n      physics: {\n        default: 'arcade',\n      },\n      plugins: {\n        scene: [\n          {\n            key: 'gridEngine',\n            plugin: GridEngine,\n            mapping: 'gridEngine',\n          },\n        ],\n      },\n      backgroundColor: '#000000',\n    });\n\n    window.phaserGame = game;\n  }, []);\n\n  useEffect(() => {\n    const dialogBoxEventListener = ({ detail }) => {\n      // TODO fallback\n      setCharacterName(detail.characterName);\n      setMessages(\n          dialogs[detail.characterName]\n      );\n    };\n    window.addEventListener('new-dialog', dialogBoxEventListener);\n\n    const gameMenuEventListener = ({ detail }) => {\n      setGameMenuItems(detail.menuItems);\n      setGameMenuPosition(detail.menuPosition);\n    };\n    window.addEventListener('menu-items', gameMenuEventListener);\n\n    const heroHealthEventListener = ({ detail }) => {\n      setHeroHealthStates(detail.healthStates);\n    };\n    window.addEventListener('hero-health', heroHealthEventListener);\n\n    const heroCoinEventListener = ({ detail }) => {\n      setHeroCoins(detail.heroCoins);\n    };\n    window.addEventListener('hero-coin', heroCoinEventListener);\n\n    return () => {\n      window.removeEventListener('new-dialog', dialogBoxEventListener);\n      window.removeEventListener('menu-items', gameMenuEventListener);\n      window.removeEventListener('hero-health', heroHealthEventListener);\n      window.removeEventListener('hero-coin', heroCoinEventListener);\n    };\n  }, [setCharacterName, setMessages]);\n\n  return (\n      <div>\n        <div className={classes.gameWrapper}>\n          <div\n              id=\"game-content\"\n              className={classes.gameContentWrapper}\n          >\n            {/* this is where the game canvas will be rendered */}\n          </div>\n          {heroHealthStates.length > 0 && (\n              <HeroHealth\n                  gameSize={{\n                    width,\n                    height,\n                    multiplier,\n                  }}\n                  healthStates={heroHealthStates}\n              />\n          )}\n          {heroCoins !== null && (\n              <HeroCoin\n                  gameSize={{\n                    width,\n                    height,\n                    multiplier,\n                  }}\n                  heroCoins={heroCoins}\n              />\n          )}\n          {messages.length > 0 && (\n              <DialogBox\n                  onDone={handleMessageIsDone}\n                  characterName={characterName}\n                  messages={messages}\n                  gameSize={{\n                    width,\n                    height,\n                    multiplier,\n                  }}\n              />\n          )}\n          {gameMenuItems.length > 0 && (\n              <GameMenu\n                  items={gameMenuItems}\n                  gameSize={{\n                    width,\n                    height,\n                    multiplier,\n                  }}\n                  position={gameMenuPosition}\n                  onSelected={handleMenuItemSelected}\n              />\n          )}\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}